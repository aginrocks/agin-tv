/*
 * TMDB API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MovieExternalIds200Response {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "imdb_id", skip_serializing_if = "Option::is_none")]
    pub imdb_id: Option<String>,
    #[serde(rename = "wikidata_id", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub wikidata_id: Option<Option<serde_json::Value>>,
    #[serde(rename = "facebook_id", skip_serializing_if = "Option::is_none")]
    pub facebook_id: Option<String>,
    #[serde(rename = "instagram_id", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub instagram_id: Option<Option<serde_json::Value>>,
    #[serde(rename = "twitter_id", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub twitter_id: Option<Option<serde_json::Value>>,
}

impl MovieExternalIds200Response {
    pub fn new() -> MovieExternalIds200Response {
        MovieExternalIds200Response {
            id: None,
            imdb_id: None,
            wikidata_id: None,
            facebook_id: None,
            instagram_id: None,
            twitter_id: None,
        }
    }
}

