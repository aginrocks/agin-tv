/*
 * TMDB API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreditDetails200Response {
    #[serde(rename = "credit_type", skip_serializing_if = "Option::is_none")]
    pub credit_type: Option<String>,
    #[serde(rename = "department", skip_serializing_if = "Option::is_none")]
    pub department: Option<String>,
    #[serde(rename = "job", skip_serializing_if = "Option::is_none")]
    pub job: Option<String>,
    #[serde(rename = "media", skip_serializing_if = "Option::is_none")]
    pub media: Option<Box<models::CreditDetails200ResponseMedia>>,
    #[serde(rename = "media_type", skip_serializing_if = "Option::is_none")]
    pub media_type: Option<String>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "person", skip_serializing_if = "Option::is_none")]
    pub person: Option<Box<models::CreditDetails200ResponsePerson>>,
}

impl CreditDetails200Response {
    pub fn new() -> CreditDetails200Response {
        CreditDetails200Response {
            credit_type: None,
            department: None,
            job: None,
            media: None,
            media_type: None,
            id: None,
            person: None,
        }
    }
}

