/*
 * TMDB API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MovieWatchProviders200ResponseResults {
    #[serde(rename = "AE", skip_serializing_if = "Option::is_none")]
    pub ae: Option<Box<models::MovieWatchProviders200ResponseResultsAe>>,
    #[serde(rename = "AL", skip_serializing_if = "Option::is_none")]
    pub al: Option<Box<models::MovieWatchProviders200ResponseResultsAl>>,
    #[serde(rename = "AR", skip_serializing_if = "Option::is_none")]
    pub ar: Option<Box<models::MovieWatchProviders200ResponseResultsAr>>,
    #[serde(rename = "AT", skip_serializing_if = "Option::is_none")]
    pub at: Option<Box<models::MovieWatchProviders200ResponseResultsAt>>,
    #[serde(rename = "AU", skip_serializing_if = "Option::is_none")]
    pub au: Option<Box<models::MovieWatchProviders200ResponseResultsAu>>,
    #[serde(rename = "BA", skip_serializing_if = "Option::is_none")]
    pub ba: Option<Box<models::MovieWatchProviders200ResponseResultsBa>>,
    #[serde(rename = "BB", skip_serializing_if = "Option::is_none")]
    pub bb: Option<Box<models::MovieWatchProviders200ResponseResultsBb>>,
    #[serde(rename = "BE", skip_serializing_if = "Option::is_none")]
    pub be: Option<Box<models::MovieWatchProviders200ResponseResultsBe>>,
    #[serde(rename = "BG", skip_serializing_if = "Option::is_none")]
    pub bg: Option<Box<models::MovieWatchProviders200ResponseResultsBg>>,
    #[serde(rename = "BH", skip_serializing_if = "Option::is_none")]
    pub bh: Option<Box<models::MovieWatchProviders200ResponseResultsBh>>,
    #[serde(rename = "BO", skip_serializing_if = "Option::is_none")]
    pub bo: Option<Box<models::MovieWatchProviders200ResponseResultsBo>>,
    #[serde(rename = "BR", skip_serializing_if = "Option::is_none")]
    pub br: Option<Box<models::MovieWatchProviders200ResponseResultsBr>>,
    #[serde(rename = "BS", skip_serializing_if = "Option::is_none")]
    pub bs: Option<Box<models::MovieWatchProviders200ResponseResultsBs>>,
    #[serde(rename = "CA", skip_serializing_if = "Option::is_none")]
    pub ca: Option<Box<models::MovieWatchProviders200ResponseResultsCa>>,
    #[serde(rename = "CH", skip_serializing_if = "Option::is_none")]
    pub ch: Option<Box<models::MovieWatchProviders200ResponseResultsCh>>,
    #[serde(rename = "CL", skip_serializing_if = "Option::is_none")]
    pub cl: Option<Box<models::MovieWatchProviders200ResponseResultsCl>>,
    #[serde(rename = "CO", skip_serializing_if = "Option::is_none")]
    pub co: Option<Box<models::MovieWatchProviders200ResponseResultsCo>>,
    #[serde(rename = "CR", skip_serializing_if = "Option::is_none")]
    pub cr: Option<Box<models::MovieWatchProviders200ResponseResultsCr>>,
    #[serde(rename = "CV", skip_serializing_if = "Option::is_none")]
    pub cv: Option<Box<models::MovieWatchProviders200ResponseResultsCv>>,
    #[serde(rename = "CZ", skip_serializing_if = "Option::is_none")]
    pub cz: Option<Box<models::MovieWatchProviders200ResponseResultsCz>>,
    #[serde(rename = "DE", skip_serializing_if = "Option::is_none")]
    pub de: Option<Box<models::MovieWatchProviders200ResponseResultsDe>>,
    #[serde(rename = "DK", skip_serializing_if = "Option::is_none")]
    pub dk: Option<Box<models::MovieWatchProviders200ResponseResultsDk>>,
    #[serde(rename = "DO", skip_serializing_if = "Option::is_none")]
    pub r#do: Option<Box<models::MovieWatchProviders200ResponseResultsDo>>,
    #[serde(rename = "EC", skip_serializing_if = "Option::is_none")]
    pub ec: Option<Box<models::MovieWatchProviders200ResponseResultsEc>>,
    #[serde(rename = "EE", skip_serializing_if = "Option::is_none")]
    pub ee: Option<Box<models::MovieWatchProviders200ResponseResultsEe>>,
    #[serde(rename = "EG", skip_serializing_if = "Option::is_none")]
    pub eg: Option<Box<models::MovieWatchProviders200ResponseResultsEg>>,
    #[serde(rename = "ES", skip_serializing_if = "Option::is_none")]
    pub es: Option<Box<models::MovieWatchProviders200ResponseResultsEs>>,
    #[serde(rename = "FI", skip_serializing_if = "Option::is_none")]
    pub fi: Option<Box<models::MovieWatchProviders200ResponseResultsFi>>,
    #[serde(rename = "FJ", skip_serializing_if = "Option::is_none")]
    pub fj: Option<Box<models::MovieWatchProviders200ResponseResultsFj>>,
    #[serde(rename = "FR", skip_serializing_if = "Option::is_none")]
    pub fr: Option<Box<models::MovieWatchProviders200ResponseResultsFr>>,
    #[serde(rename = "GB", skip_serializing_if = "Option::is_none")]
    pub gb: Option<Box<models::MovieWatchProviders200ResponseResultsGb>>,
    #[serde(rename = "GF", skip_serializing_if = "Option::is_none")]
    pub gf: Option<Box<models::MovieWatchProviders200ResponseResultsGf>>,
    #[serde(rename = "GI", skip_serializing_if = "Option::is_none")]
    pub gi: Option<Box<models::MovieWatchProviders200ResponseResultsGi>>,
    #[serde(rename = "GR", skip_serializing_if = "Option::is_none")]
    pub gr: Option<Box<models::MovieWatchProviders200ResponseResultsGr>>,
    #[serde(rename = "GT", skip_serializing_if = "Option::is_none")]
    pub gt: Option<Box<models::MovieWatchProviders200ResponseResultsGt>>,
    #[serde(rename = "HK", skip_serializing_if = "Option::is_none")]
    pub hk: Option<Box<models::MovieWatchProviders200ResponseResultsHk>>,
    #[serde(rename = "HN", skip_serializing_if = "Option::is_none")]
    pub hn: Option<Box<models::MovieWatchProviders200ResponseResultsHn>>,
    #[serde(rename = "HR", skip_serializing_if = "Option::is_none")]
    pub hr: Option<Box<models::MovieWatchProviders200ResponseResultsHr>>,
    #[serde(rename = "HU", skip_serializing_if = "Option::is_none")]
    pub hu: Option<Box<models::MovieWatchProviders200ResponseResultsHu>>,
    #[serde(rename = "ID", skip_serializing_if = "Option::is_none")]
    pub id: Option<Box<models::MovieWatchProviders200ResponseResultsId>>,
    #[serde(rename = "IE", skip_serializing_if = "Option::is_none")]
    pub ie: Option<Box<models::MovieWatchProviders200ResponseResultsIe>>,
    #[serde(rename = "IL", skip_serializing_if = "Option::is_none")]
    pub il: Option<Box<models::MovieWatchProviders200ResponseResultsIl>>,
    #[serde(rename = "IN", skip_serializing_if = "Option::is_none")]
    pub r#in: Option<Box<models::MovieWatchProviders200ResponseResultsIn>>,
    #[serde(rename = "IQ", skip_serializing_if = "Option::is_none")]
    pub iq: Option<Box<models::MovieWatchProviders200ResponseResultsIq>>,
    #[serde(rename = "IS", skip_serializing_if = "Option::is_none")]
    pub is: Option<Box<models::MovieWatchProviders200ResponseResultsIs>>,
    #[serde(rename = "IT", skip_serializing_if = "Option::is_none")]
    pub it: Option<Box<models::MovieWatchProviders200ResponseResultsIt>>,
    #[serde(rename = "JM", skip_serializing_if = "Option::is_none")]
    pub jm: Option<Box<models::MovieWatchProviders200ResponseResultsJm>>,
    #[serde(rename = "JO", skip_serializing_if = "Option::is_none")]
    pub jo: Option<Box<models::MovieWatchProviders200ResponseResultsJo>>,
    #[serde(rename = "JP", skip_serializing_if = "Option::is_none")]
    pub jp: Option<Box<models::MovieWatchProviders200ResponseResultsJp>>,
    #[serde(rename = "KR", skip_serializing_if = "Option::is_none")]
    pub kr: Option<Box<models::MovieWatchProviders200ResponseResultsKr>>,
    #[serde(rename = "KW", skip_serializing_if = "Option::is_none")]
    pub kw: Option<Box<models::MovieWatchProviders200ResponseResultsKw>>,
    #[serde(rename = "LB", skip_serializing_if = "Option::is_none")]
    pub lb: Option<Box<models::MovieWatchProviders200ResponseResultsLb>>,
    #[serde(rename = "LI", skip_serializing_if = "Option::is_none")]
    pub li: Option<Box<models::MovieWatchProviders200ResponseResultsLi>>,
    #[serde(rename = "LT", skip_serializing_if = "Option::is_none")]
    pub lt: Option<Box<models::MovieWatchProviders200ResponseResultsLt>>,
    #[serde(rename = "LV", skip_serializing_if = "Option::is_none")]
    pub lv: Option<Box<models::MovieWatchProviders200ResponseResultsLv>>,
    #[serde(rename = "MD", skip_serializing_if = "Option::is_none")]
    pub md: Option<Box<models::MovieWatchProviders200ResponseResultsMd>>,
    #[serde(rename = "MK", skip_serializing_if = "Option::is_none")]
    pub mk: Option<Box<models::MovieWatchProviders200ResponseResultsMk>>,
    #[serde(rename = "MT", skip_serializing_if = "Option::is_none")]
    pub mt: Option<Box<models::MovieWatchProviders200ResponseResultsMt>>,
    #[serde(rename = "MU", skip_serializing_if = "Option::is_none")]
    pub mu: Option<Box<models::MovieWatchProviders200ResponseResultsMu>>,
    #[serde(rename = "MX", skip_serializing_if = "Option::is_none")]
    pub mx: Option<Box<models::MovieWatchProviders200ResponseResultsMx>>,
    #[serde(rename = "MY", skip_serializing_if = "Option::is_none")]
    pub my: Option<Box<models::MovieWatchProviders200ResponseResultsMy>>,
    #[serde(rename = "MZ", skip_serializing_if = "Option::is_none")]
    pub mz: Option<Box<models::MovieWatchProviders200ResponseResultsMz>>,
    #[serde(rename = "NL", skip_serializing_if = "Option::is_none")]
    pub nl: Option<Box<models::MovieWatchProviders200ResponseResultsNl>>,
    #[serde(rename = "NO", skip_serializing_if = "Option::is_none")]
    pub no: Option<Box<models::MovieWatchProviders200ResponseResultsNo>>,
    #[serde(rename = "NZ", skip_serializing_if = "Option::is_none")]
    pub nz: Option<Box<models::MovieWatchProviders200ResponseResultsNz>>,
    #[serde(rename = "OM", skip_serializing_if = "Option::is_none")]
    pub om: Option<Box<models::MovieWatchProviders200ResponseResultsOm>>,
    #[serde(rename = "PA", skip_serializing_if = "Option::is_none")]
    pub pa: Option<Box<models::MovieWatchProviders200ResponseResultsPa>>,
    #[serde(rename = "PE", skip_serializing_if = "Option::is_none")]
    pub pe: Option<Box<models::MovieWatchProviders200ResponseResultsPe>>,
    #[serde(rename = "PH", skip_serializing_if = "Option::is_none")]
    pub ph: Option<Box<models::MovieWatchProviders200ResponseResultsPh>>,
    #[serde(rename = "PK", skip_serializing_if = "Option::is_none")]
    pub pk: Option<Box<models::MovieWatchProviders200ResponseResultsPk>>,
    #[serde(rename = "PL", skip_serializing_if = "Option::is_none")]
    pub pl: Option<Box<models::MovieWatchProviders200ResponseResultsPl>>,
    #[serde(rename = "PS", skip_serializing_if = "Option::is_none")]
    pub ps: Option<Box<models::MovieWatchProviders200ResponseResultsPs>>,
    #[serde(rename = "PT", skip_serializing_if = "Option::is_none")]
    pub pt: Option<Box<models::MovieWatchProviders200ResponseResultsPt>>,
    #[serde(rename = "PY", skip_serializing_if = "Option::is_none")]
    pub py: Option<Box<models::MovieWatchProviders200ResponseResultsPy>>,
    #[serde(rename = "QA", skip_serializing_if = "Option::is_none")]
    pub qa: Option<Box<models::MovieWatchProviders200ResponseResultsQa>>,
    #[serde(rename = "RO", skip_serializing_if = "Option::is_none")]
    pub ro: Option<Box<models::MovieWatchProviders200ResponseResultsRo>>,
    #[serde(rename = "RS", skip_serializing_if = "Option::is_none")]
    pub rs: Option<Box<models::MovieWatchProviders200ResponseResultsRs>>,
    #[serde(rename = "RU", skip_serializing_if = "Option::is_none")]
    pub ru: Option<Box<models::MovieWatchProviders200ResponseResultsRu>>,
    #[serde(rename = "SA", skip_serializing_if = "Option::is_none")]
    pub sa: Option<Box<models::MovieWatchProviders200ResponseResultsSa>>,
    #[serde(rename = "SE", skip_serializing_if = "Option::is_none")]
    pub se: Option<Box<models::MovieWatchProviders200ResponseResultsSe>>,
    #[serde(rename = "SG", skip_serializing_if = "Option::is_none")]
    pub sg: Option<Box<models::MovieWatchProviders200ResponseResultsSg>>,
    #[serde(rename = "SI", skip_serializing_if = "Option::is_none")]
    pub si: Option<Box<models::MovieWatchProviders200ResponseResultsSi>>,
    #[serde(rename = "SK", skip_serializing_if = "Option::is_none")]
    pub sk: Option<Box<models::MovieWatchProviders200ResponseResultsSk>>,
    #[serde(rename = "SM", skip_serializing_if = "Option::is_none")]
    pub sm: Option<Box<models::MovieWatchProviders200ResponseResultsSm>>,
    #[serde(rename = "SV", skip_serializing_if = "Option::is_none")]
    pub sv: Option<Box<models::MovieWatchProviders200ResponseResultsSv>>,
    #[serde(rename = "TH", skip_serializing_if = "Option::is_none")]
    pub th: Option<Box<models::MovieWatchProviders200ResponseResultsTh>>,
    #[serde(rename = "TR", skip_serializing_if = "Option::is_none")]
    pub tr: Option<Box<models::MovieWatchProviders200ResponseResultsTr>>,
    #[serde(rename = "TT", skip_serializing_if = "Option::is_none")]
    pub tt: Option<Box<models::MovieWatchProviders200ResponseResultsTt>>,
    #[serde(rename = "TW", skip_serializing_if = "Option::is_none")]
    pub tw: Option<Box<models::MovieWatchProviders200ResponseResultsTw>>,
    #[serde(rename = "UG", skip_serializing_if = "Option::is_none")]
    pub ug: Option<Box<models::MovieWatchProviders200ResponseResultsUg>>,
    #[serde(rename = "US", skip_serializing_if = "Option::is_none")]
    pub us: Option<Box<models::MovieWatchProviders200ResponseResultsUs>>,
    #[serde(rename = "UY", skip_serializing_if = "Option::is_none")]
    pub uy: Option<Box<models::MovieWatchProviders200ResponseResultsUy>>,
    #[serde(rename = "VE", skip_serializing_if = "Option::is_none")]
    pub ve: Option<Box<models::MovieWatchProviders200ResponseResultsVe>>,
    #[serde(rename = "YE", skip_serializing_if = "Option::is_none")]
    pub ye: Option<Box<models::MovieWatchProviders200ResponseResultsYe>>,
    #[serde(rename = "ZA", skip_serializing_if = "Option::is_none")]
    pub za: Option<Box<models::MovieWatchProviders200ResponseResultsZa>>,
}

impl MovieWatchProviders200ResponseResults {
    pub fn new() -> MovieWatchProviders200ResponseResults {
        MovieWatchProviders200ResponseResults {
            ae: None,
            al: None,
            ar: None,
            at: None,
            au: None,
            ba: None,
            bb: None,
            be: None,
            bg: None,
            bh: None,
            bo: None,
            br: None,
            bs: None,
            ca: None,
            ch: None,
            cl: None,
            co: None,
            cr: None,
            cv: None,
            cz: None,
            de: None,
            dk: None,
            r#do: None,
            ec: None,
            ee: None,
            eg: None,
            es: None,
            fi: None,
            fj: None,
            fr: None,
            gb: None,
            gf: None,
            gi: None,
            gr: None,
            gt: None,
            hk: None,
            hn: None,
            hr: None,
            hu: None,
            id: None,
            ie: None,
            il: None,
            r#in: None,
            iq: None,
            is: None,
            it: None,
            jm: None,
            jo: None,
            jp: None,
            kr: None,
            kw: None,
            lb: None,
            li: None,
            lt: None,
            lv: None,
            md: None,
            mk: None,
            mt: None,
            mu: None,
            mx: None,
            my: None,
            mz: None,
            nl: None,
            no: None,
            nz: None,
            om: None,
            pa: None,
            pe: None,
            ph: None,
            pk: None,
            pl: None,
            ps: None,
            pt: None,
            py: None,
            qa: None,
            ro: None,
            rs: None,
            ru: None,
            sa: None,
            se: None,
            sg: None,
            si: None,
            sk: None,
            sm: None,
            sv: None,
            th: None,
            tr: None,
            tt: None,
            tw: None,
            ug: None,
            us: None,
            uy: None,
            ve: None,
            ye: None,
            za: None,
        }
    }
}

