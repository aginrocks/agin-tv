/*
 * TMDB API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MovieReleaseDates200ResponseResultsInnerReleaseDatesInner {
    #[serde(rename = "certification", skip_serializing_if = "Option::is_none")]
    pub certification: Option<String>,
    #[serde(rename = "descriptors", skip_serializing_if = "Option::is_none")]
    pub descriptors: Option<Vec<serde_json::Value>>,
    #[serde(rename = "iso_639_1", skip_serializing_if = "Option::is_none")]
    pub iso_639_1: Option<String>,
    #[serde(rename = "note", skip_serializing_if = "Option::is_none")]
    pub note: Option<String>,
    #[serde(rename = "release_date", skip_serializing_if = "Option::is_none")]
    pub release_date: Option<String>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<i32>,
}

impl MovieReleaseDates200ResponseResultsInnerReleaseDatesInner {
    pub fn new() -> MovieReleaseDates200ResponseResultsInnerReleaseDatesInner {
        MovieReleaseDates200ResponseResultsInnerReleaseDatesInner {
            certification: None,
            descriptors: None,
            iso_639_1: None,
            note: None,
            release_date: None,
            r#type: None,
        }
    }
}

