/*
 * TMDB API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TvSeasonExternalIds200Response {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "freebase_mid", skip_serializing_if = "Option::is_none")]
    pub freebase_mid: Option<String>,
    #[serde(rename = "freebase_id", skip_serializing_if = "Option::is_none")]
    pub freebase_id: Option<String>,
    #[serde(rename = "tvdb_id", skip_serializing_if = "Option::is_none")]
    pub tvdb_id: Option<i32>,
    #[serde(rename = "tvrage_id", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub tvrage_id: Option<Option<serde_json::Value>>,
    #[serde(rename = "wikidata_id", skip_serializing_if = "Option::is_none")]
    pub wikidata_id: Option<String>,
}

impl TvSeasonExternalIds200Response {
    pub fn new() -> TvSeasonExternalIds200Response {
        TvSeasonExternalIds200Response {
            id: None,
            freebase_mid: None,
            freebase_id: None,
            tvdb_id: None,
            tvrage_id: None,
            wikidata_id: None,
        }
    }
}

