/*
 * TMDB API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FindById200Response {
    #[serde(rename = "movie_results", skip_serializing_if = "Option::is_none")]
    pub movie_results: Option<Vec<models::FindById200ResponseMovieResultsInner>>,
    #[serde(rename = "person_results", skip_serializing_if = "Option::is_none")]
    pub person_results: Option<Vec<serde_json::Value>>,
    #[serde(rename = "tv_results", skip_serializing_if = "Option::is_none")]
    pub tv_results: Option<Vec<serde_json::Value>>,
    #[serde(rename = "tv_episode_results", skip_serializing_if = "Option::is_none")]
    pub tv_episode_results: Option<Vec<serde_json::Value>>,
    #[serde(rename = "tv_season_results", skip_serializing_if = "Option::is_none")]
    pub tv_season_results: Option<Vec<serde_json::Value>>,
}

impl FindById200Response {
    pub fn new() -> FindById200Response {
        FindById200Response {
            movie_results: None,
            person_results: None,
            tv_results: None,
            tv_episode_results: None,
            tv_season_results: None,
        }
    }
}

