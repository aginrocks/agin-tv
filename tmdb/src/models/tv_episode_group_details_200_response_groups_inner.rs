/*
 * TMDB API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TvEpisodeGroupDetails200ResponseGroupsInner {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "order", skip_serializing_if = "Option::is_none")]
    pub order: Option<i32>,
    #[serde(rename = "episodes", skip_serializing_if = "Option::is_none")]
    pub episodes: Option<Vec<models::TvEpisodeGroupDetails200ResponseGroupsInnerEpisodesInner>>,
    #[serde(rename = "locked", skip_serializing_if = "Option::is_none")]
    pub locked: Option<bool>,
}

impl TvEpisodeGroupDetails200ResponseGroupsInner {
    pub fn new() -> TvEpisodeGroupDetails200ResponseGroupsInner {
        TvEpisodeGroupDetails200ResponseGroupsInner {
            id: None,
            name: None,
            order: None,
            episodes: None,
            locked: None,
        }
    }
}

