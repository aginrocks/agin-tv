/*
 * TMDB API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WatchProvidersMovieList200ResponseResultsInnerDisplayPriorities {
    #[serde(rename = "CA", skip_serializing_if = "Option::is_none")]
    pub ca: Option<i32>,
    #[serde(rename = "AE", skip_serializing_if = "Option::is_none")]
    pub ae: Option<i32>,
    #[serde(rename = "AR", skip_serializing_if = "Option::is_none")]
    pub ar: Option<i32>,
    #[serde(rename = "AT", skip_serializing_if = "Option::is_none")]
    pub at: Option<i32>,
    #[serde(rename = "AU", skip_serializing_if = "Option::is_none")]
    pub au: Option<i32>,
    #[serde(rename = "BE", skip_serializing_if = "Option::is_none")]
    pub be: Option<i32>,
    #[serde(rename = "BO", skip_serializing_if = "Option::is_none")]
    pub bo: Option<i32>,
    #[serde(rename = "BR", skip_serializing_if = "Option::is_none")]
    pub br: Option<i32>,
    #[serde(rename = "BG", skip_serializing_if = "Option::is_none")]
    pub bg: Option<i32>,
    #[serde(rename = "CH", skip_serializing_if = "Option::is_none")]
    pub ch: Option<i32>,
    #[serde(rename = "CL", skip_serializing_if = "Option::is_none")]
    pub cl: Option<i32>,
    #[serde(rename = "CO", skip_serializing_if = "Option::is_none")]
    pub co: Option<i32>,
    #[serde(rename = "CR", skip_serializing_if = "Option::is_none")]
    pub cr: Option<i32>,
    #[serde(rename = "CZ", skip_serializing_if = "Option::is_none")]
    pub cz: Option<i32>,
    #[serde(rename = "DE", skip_serializing_if = "Option::is_none")]
    pub de: Option<i32>,
    #[serde(rename = "DK", skip_serializing_if = "Option::is_none")]
    pub dk: Option<i32>,
    #[serde(rename = "EC", skip_serializing_if = "Option::is_none")]
    pub ec: Option<i32>,
    #[serde(rename = "EE", skip_serializing_if = "Option::is_none")]
    pub ee: Option<i32>,
    #[serde(rename = "EG", skip_serializing_if = "Option::is_none")]
    pub eg: Option<i32>,
    #[serde(rename = "ES", skip_serializing_if = "Option::is_none")]
    pub es: Option<i32>,
    #[serde(rename = "FI", skip_serializing_if = "Option::is_none")]
    pub fi: Option<i32>,
    #[serde(rename = "FR", skip_serializing_if = "Option::is_none")]
    pub fr: Option<i32>,
    #[serde(rename = "GB", skip_serializing_if = "Option::is_none")]
    pub gb: Option<i32>,
    #[serde(rename = "GR", skip_serializing_if = "Option::is_none")]
    pub gr: Option<i32>,
    #[serde(rename = "GT", skip_serializing_if = "Option::is_none")]
    pub gt: Option<i32>,
    #[serde(rename = "HK", skip_serializing_if = "Option::is_none")]
    pub hk: Option<i32>,
    #[serde(rename = "HN", skip_serializing_if = "Option::is_none")]
    pub hn: Option<i32>,
    #[serde(rename = "HU", skip_serializing_if = "Option::is_none")]
    pub hu: Option<i32>,
    #[serde(rename = "ID", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "IE", skip_serializing_if = "Option::is_none")]
    pub ie: Option<i32>,
    #[serde(rename = "IN", skip_serializing_if = "Option::is_none")]
    pub r#in: Option<i32>,
    #[serde(rename = "IT", skip_serializing_if = "Option::is_none")]
    pub it: Option<i32>,
    #[serde(rename = "JP", skip_serializing_if = "Option::is_none")]
    pub jp: Option<i32>,
    #[serde(rename = "LT", skip_serializing_if = "Option::is_none")]
    pub lt: Option<i32>,
    #[serde(rename = "LV", skip_serializing_if = "Option::is_none")]
    pub lv: Option<i32>,
    #[serde(rename = "MX", skip_serializing_if = "Option::is_none")]
    pub mx: Option<i32>,
    #[serde(rename = "MY", skip_serializing_if = "Option::is_none")]
    pub my: Option<i32>,
    #[serde(rename = "NL", skip_serializing_if = "Option::is_none")]
    pub nl: Option<i32>,
    #[serde(rename = "NO", skip_serializing_if = "Option::is_none")]
    pub no: Option<i32>,
    #[serde(rename = "NZ", skip_serializing_if = "Option::is_none")]
    pub nz: Option<i32>,
    #[serde(rename = "PE", skip_serializing_if = "Option::is_none")]
    pub pe: Option<i32>,
    #[serde(rename = "PH", skip_serializing_if = "Option::is_none")]
    pub ph: Option<i32>,
    #[serde(rename = "PL", skip_serializing_if = "Option::is_none")]
    pub pl: Option<i32>,
    #[serde(rename = "PT", skip_serializing_if = "Option::is_none")]
    pub pt: Option<i32>,
    #[serde(rename = "PY", skip_serializing_if = "Option::is_none")]
    pub py: Option<i32>,
    #[serde(rename = "RU", skip_serializing_if = "Option::is_none")]
    pub ru: Option<i32>,
    #[serde(rename = "SA", skip_serializing_if = "Option::is_none")]
    pub sa: Option<i32>,
    #[serde(rename = "SE", skip_serializing_if = "Option::is_none")]
    pub se: Option<i32>,
    #[serde(rename = "SG", skip_serializing_if = "Option::is_none")]
    pub sg: Option<i32>,
    #[serde(rename = "SK", skip_serializing_if = "Option::is_none")]
    pub sk: Option<i32>,
    #[serde(rename = "TH", skip_serializing_if = "Option::is_none")]
    pub th: Option<i32>,
    #[serde(rename = "TR", skip_serializing_if = "Option::is_none")]
    pub tr: Option<i32>,
    #[serde(rename = "TW", skip_serializing_if = "Option::is_none")]
    pub tw: Option<i32>,
    #[serde(rename = "US", skip_serializing_if = "Option::is_none")]
    pub us: Option<i32>,
    #[serde(rename = "VE", skip_serializing_if = "Option::is_none")]
    pub ve: Option<i32>,
    #[serde(rename = "ZA", skip_serializing_if = "Option::is_none")]
    pub za: Option<i32>,
    #[serde(rename = "SI", skip_serializing_if = "Option::is_none")]
    pub si: Option<i32>,
    #[serde(rename = "CV", skip_serializing_if = "Option::is_none")]
    pub cv: Option<i32>,
    #[serde(rename = "GH", skip_serializing_if = "Option::is_none")]
    pub gh: Option<i32>,
    #[serde(rename = "MU", skip_serializing_if = "Option::is_none")]
    pub mu: Option<i32>,
    #[serde(rename = "MZ", skip_serializing_if = "Option::is_none")]
    pub mz: Option<i32>,
    #[serde(rename = "UG", skip_serializing_if = "Option::is_none")]
    pub ug: Option<i32>,
    #[serde(rename = "IL", skip_serializing_if = "Option::is_none")]
    pub il: Option<i32>,
}

impl WatchProvidersMovieList200ResponseResultsInnerDisplayPriorities {
    pub fn new() -> WatchProvidersMovieList200ResponseResultsInnerDisplayPriorities {
        WatchProvidersMovieList200ResponseResultsInnerDisplayPriorities {
            ca: None,
            ae: None,
            ar: None,
            at: None,
            au: None,
            be: None,
            bo: None,
            br: None,
            bg: None,
            ch: None,
            cl: None,
            co: None,
            cr: None,
            cz: None,
            de: None,
            dk: None,
            ec: None,
            ee: None,
            eg: None,
            es: None,
            fi: None,
            fr: None,
            gb: None,
            gr: None,
            gt: None,
            hk: None,
            hn: None,
            hu: None,
            id: None,
            ie: None,
            r#in: None,
            it: None,
            jp: None,
            lt: None,
            lv: None,
            mx: None,
            my: None,
            nl: None,
            no: None,
            nz: None,
            pe: None,
            ph: None,
            pl: None,
            pt: None,
            py: None,
            ru: None,
            sa: None,
            se: None,
            sg: None,
            sk: None,
            th: None,
            tr: None,
            tw: None,
            us: None,
            ve: None,
            za: None,
            si: None,
            cv: None,
            gh: None,
            mu: None,
            mz: None,
            ug: None,
            il: None,
        }
    }
}

