/*
 * TMDB API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TvSeriesWatchProviders200ResponseResults {
    #[serde(rename = "AE", skip_serializing_if = "Option::is_none")]
    pub ae: Option<Box<models::TvSeriesWatchProviders200ResponseResultsAe>>,
    #[serde(rename = "AR", skip_serializing_if = "Option::is_none")]
    pub ar: Option<Box<models::TvSeriesWatchProviders200ResponseResultsAr>>,
    #[serde(rename = "AT", skip_serializing_if = "Option::is_none")]
    pub at: Option<Box<models::TvSeriesWatchProviders200ResponseResultsAt>>,
    #[serde(rename = "AU", skip_serializing_if = "Option::is_none")]
    pub au: Option<Box<models::TvSeriesWatchProviders200ResponseResultsAu>>,
    #[serde(rename = "BA", skip_serializing_if = "Option::is_none")]
    pub ba: Option<Box<models::TvSeriesWatchProviders200ResponseResultsBa>>,
    #[serde(rename = "BB", skip_serializing_if = "Option::is_none")]
    pub bb: Option<Box<models::TvSeriesWatchProviders200ResponseResultsBb>>,
    #[serde(rename = "BE", skip_serializing_if = "Option::is_none")]
    pub be: Option<Box<models::TvSeriesWatchProviders200ResponseResultsBe>>,
    #[serde(rename = "BG", skip_serializing_if = "Option::is_none")]
    pub bg: Option<Box<models::TvSeriesWatchProviders200ResponseResultsBg>>,
    #[serde(rename = "BO", skip_serializing_if = "Option::is_none")]
    pub bo: Option<Box<models::TvSeriesWatchProviders200ResponseResultsBo>>,
    #[serde(rename = "BR", skip_serializing_if = "Option::is_none")]
    pub br: Option<Box<models::TvSeriesWatchProviders200ResponseResultsBr>>,
    #[serde(rename = "BS", skip_serializing_if = "Option::is_none")]
    pub bs: Option<Box<models::TvSeriesWatchProviders200ResponseResultsBs>>,
    #[serde(rename = "CA", skip_serializing_if = "Option::is_none")]
    pub ca: Option<Box<models::TvSeriesWatchProviders200ResponseResultsCa>>,
    #[serde(rename = "CH", skip_serializing_if = "Option::is_none")]
    pub ch: Option<Box<models::TvSeriesWatchProviders200ResponseResultsCh>>,
    #[serde(rename = "CI", skip_serializing_if = "Option::is_none")]
    pub ci: Option<Box<models::TvSeriesWatchProviders200ResponseResultsCi>>,
    #[serde(rename = "CL", skip_serializing_if = "Option::is_none")]
    pub cl: Option<Box<models::TvSeriesWatchProviders200ResponseResultsCl>>,
    #[serde(rename = "CO", skip_serializing_if = "Option::is_none")]
    pub co: Option<Box<models::TvSeriesWatchProviders200ResponseResultsCo>>,
    #[serde(rename = "CR", skip_serializing_if = "Option::is_none")]
    pub cr: Option<Box<models::TvSeriesWatchProviders200ResponseResultsCr>>,
    #[serde(rename = "CZ", skip_serializing_if = "Option::is_none")]
    pub cz: Option<Box<models::TvSeriesWatchProviders200ResponseResultsCz>>,
    #[serde(rename = "DE", skip_serializing_if = "Option::is_none")]
    pub de: Option<Box<models::TvSeriesWatchProviders200ResponseResultsDe>>,
    #[serde(rename = "DK", skip_serializing_if = "Option::is_none")]
    pub dk: Option<Box<models::TvSeriesWatchProviders200ResponseResultsDk>>,
    #[serde(rename = "DO", skip_serializing_if = "Option::is_none")]
    pub r#do: Option<Box<models::TvSeriesWatchProviders200ResponseResultsDo>>,
    #[serde(rename = "DZ", skip_serializing_if = "Option::is_none")]
    pub dz: Option<Box<models::TvSeriesWatchProviders200ResponseResultsDz>>,
    #[serde(rename = "EC", skip_serializing_if = "Option::is_none")]
    pub ec: Option<Box<models::TvSeriesWatchProviders200ResponseResultsEc>>,
    #[serde(rename = "EG", skip_serializing_if = "Option::is_none")]
    pub eg: Option<Box<models::TvSeriesWatchProviders200ResponseResultsEg>>,
    #[serde(rename = "ES", skip_serializing_if = "Option::is_none")]
    pub es: Option<Box<models::TvSeriesWatchProviders200ResponseResultsEs>>,
    #[serde(rename = "FI", skip_serializing_if = "Option::is_none")]
    pub fi: Option<Box<models::TvSeriesWatchProviders200ResponseResultsFi>>,
    #[serde(rename = "FR", skip_serializing_if = "Option::is_none")]
    pub fr: Option<Box<models::TvSeriesWatchProviders200ResponseResultsFr>>,
    #[serde(rename = "GB", skip_serializing_if = "Option::is_none")]
    pub gb: Option<Box<models::TvSeriesWatchProviders200ResponseResultsGb>>,
    #[serde(rename = "GF", skip_serializing_if = "Option::is_none")]
    pub gf: Option<Box<models::TvSeriesWatchProviders200ResponseResultsGf>>,
    #[serde(rename = "GH", skip_serializing_if = "Option::is_none")]
    pub gh: Option<Box<models::TvSeriesWatchProviders200ResponseResultsGh>>,
    #[serde(rename = "GQ", skip_serializing_if = "Option::is_none")]
    pub gq: Option<Box<models::TvSeriesWatchProviders200ResponseResultsGq>>,
    #[serde(rename = "GT", skip_serializing_if = "Option::is_none")]
    pub gt: Option<Box<models::TvSeriesWatchProviders200ResponseResultsGt>>,
    #[serde(rename = "HK", skip_serializing_if = "Option::is_none")]
    pub hk: Option<Box<models::TvSeriesWatchProviders200ResponseResultsHk>>,
    #[serde(rename = "HN", skip_serializing_if = "Option::is_none")]
    pub hn: Option<Box<models::TvSeriesWatchProviders200ResponseResultsHn>>,
    #[serde(rename = "HR", skip_serializing_if = "Option::is_none")]
    pub hr: Option<Box<models::TvSeriesWatchProviders200ResponseResultsHr>>,
    #[serde(rename = "HU", skip_serializing_if = "Option::is_none")]
    pub hu: Option<Box<models::TvSeriesWatchProviders200ResponseResultsHu>>,
    #[serde(rename = "ID", skip_serializing_if = "Option::is_none")]
    pub id: Option<Box<models::TvSeriesWatchProviders200ResponseResultsId>>,
    #[serde(rename = "IE", skip_serializing_if = "Option::is_none")]
    pub ie: Option<Box<models::TvSeriesWatchProviders200ResponseResultsIe>>,
    #[serde(rename = "IL", skip_serializing_if = "Option::is_none")]
    pub il: Option<Box<models::TvSeriesWatchProviders200ResponseResultsIl>>,
    #[serde(rename = "IQ", skip_serializing_if = "Option::is_none")]
    pub iq: Option<Box<models::TvSeriesWatchProviders200ResponseResultsIq>>,
    #[serde(rename = "IT", skip_serializing_if = "Option::is_none")]
    pub it: Option<Box<models::TvSeriesWatchProviders200ResponseResultsIt>>,
    #[serde(rename = "JM", skip_serializing_if = "Option::is_none")]
    pub jm: Option<Box<models::TvSeriesWatchProviders200ResponseResultsJm>>,
    #[serde(rename = "JP", skip_serializing_if = "Option::is_none")]
    pub jp: Option<Box<models::TvSeriesWatchProviders200ResponseResultsJp>>,
    #[serde(rename = "KE", skip_serializing_if = "Option::is_none")]
    pub ke: Option<Box<models::TvSeriesWatchProviders200ResponseResultsKe>>,
    #[serde(rename = "KR", skip_serializing_if = "Option::is_none")]
    pub kr: Option<Box<models::TvSeriesWatchProviders200ResponseResultsKr>>,
    #[serde(rename = "LB", skip_serializing_if = "Option::is_none")]
    pub lb: Option<Box<models::TvSeriesWatchProviders200ResponseResultsLb>>,
    #[serde(rename = "LT", skip_serializing_if = "Option::is_none")]
    pub lt: Option<Box<models::TvSeriesWatchProviders200ResponseResultsLt>>,
    #[serde(rename = "LY", skip_serializing_if = "Option::is_none")]
    pub ly: Option<Box<models::TvSeriesWatchProviders200ResponseResultsLy>>,
    #[serde(rename = "MD", skip_serializing_if = "Option::is_none")]
    pub md: Option<Box<models::TvSeriesWatchProviders200ResponseResultsMd>>,
    #[serde(rename = "MK", skip_serializing_if = "Option::is_none")]
    pub mk: Option<Box<models::TvSeriesWatchProviders200ResponseResultsMk>>,
    #[serde(rename = "MU", skip_serializing_if = "Option::is_none")]
    pub mu: Option<Box<models::TvSeriesWatchProviders200ResponseResultsMu>>,
    #[serde(rename = "MX", skip_serializing_if = "Option::is_none")]
    pub mx: Option<Box<models::TvSeriesWatchProviders200ResponseResultsMx>>,
    #[serde(rename = "MY", skip_serializing_if = "Option::is_none")]
    pub my: Option<Box<models::TvSeriesWatchProviders200ResponseResultsMy>>,
    #[serde(rename = "MZ", skip_serializing_if = "Option::is_none")]
    pub mz: Option<Box<models::TvSeriesWatchProviders200ResponseResultsMz>>,
    #[serde(rename = "NE", skip_serializing_if = "Option::is_none")]
    pub ne: Option<Box<models::TvSeriesWatchProviders200ResponseResultsNe>>,
    #[serde(rename = "NG", skip_serializing_if = "Option::is_none")]
    pub ng: Option<Box<models::TvSeriesWatchProviders200ResponseResultsNg>>,
    #[serde(rename = "NL", skip_serializing_if = "Option::is_none")]
    pub nl: Option<Box<models::TvSeriesWatchProviders200ResponseResultsNl>>,
    #[serde(rename = "NO", skip_serializing_if = "Option::is_none")]
    pub no: Option<Box<models::TvSeriesWatchProviders200ResponseResultsNo>>,
    #[serde(rename = "NZ", skip_serializing_if = "Option::is_none")]
    pub nz: Option<Box<models::TvSeriesWatchProviders200ResponseResultsNz>>,
    #[serde(rename = "PA", skip_serializing_if = "Option::is_none")]
    pub pa: Option<Box<models::TvSeriesWatchProviders200ResponseResultsPa>>,
    #[serde(rename = "PE", skip_serializing_if = "Option::is_none")]
    pub pe: Option<Box<models::TvSeriesWatchProviders200ResponseResultsPe>>,
    #[serde(rename = "PH", skip_serializing_if = "Option::is_none")]
    pub ph: Option<Box<models::TvSeriesWatchProviders200ResponseResultsPh>>,
    #[serde(rename = "PL", skip_serializing_if = "Option::is_none")]
    pub pl: Option<Box<models::TvSeriesWatchProviders200ResponseResultsPl>>,
    #[serde(rename = "PS", skip_serializing_if = "Option::is_none")]
    pub ps: Option<Box<models::TvSeriesWatchProviders200ResponseResultsPs>>,
    #[serde(rename = "PT", skip_serializing_if = "Option::is_none")]
    pub pt: Option<Box<models::TvSeriesWatchProviders200ResponseResultsPt>>,
    #[serde(rename = "PY", skip_serializing_if = "Option::is_none")]
    pub py: Option<Box<models::TvSeriesWatchProviders200ResponseResultsPy>>,
    #[serde(rename = "RO", skip_serializing_if = "Option::is_none")]
    pub ro: Option<Box<models::TvSeriesWatchProviders200ResponseResultsRo>>,
    #[serde(rename = "RS", skip_serializing_if = "Option::is_none")]
    pub rs: Option<Box<models::TvSeriesWatchProviders200ResponseResultsRs>>,
    #[serde(rename = "RU", skip_serializing_if = "Option::is_none")]
    pub ru: Option<Box<models::TvSeriesWatchProviders200ResponseResultsRu>>,
    #[serde(rename = "SA", skip_serializing_if = "Option::is_none")]
    pub sa: Option<Box<models::TvSeriesWatchProviders200ResponseResultsSa>>,
    #[serde(rename = "SC", skip_serializing_if = "Option::is_none")]
    pub sc: Option<Box<models::TvSeriesWatchProviders200ResponseResultsSc>>,
    #[serde(rename = "SE", skip_serializing_if = "Option::is_none")]
    pub se: Option<Box<models::TvSeriesWatchProviders200ResponseResultsSe>>,
    #[serde(rename = "SG", skip_serializing_if = "Option::is_none")]
    pub sg: Option<Box<models::TvSeriesWatchProviders200ResponseResultsSg>>,
    #[serde(rename = "SI", skip_serializing_if = "Option::is_none")]
    pub si: Option<Box<models::TvSeriesWatchProviders200ResponseResultsSi>>,
    #[serde(rename = "SK", skip_serializing_if = "Option::is_none")]
    pub sk: Option<Box<models::TvSeriesWatchProviders200ResponseResultsSk>>,
    #[serde(rename = "SN", skip_serializing_if = "Option::is_none")]
    pub sn: Option<Box<models::TvSeriesWatchProviders200ResponseResultsSn>>,
    #[serde(rename = "SV", skip_serializing_if = "Option::is_none")]
    pub sv: Option<Box<models::TvSeriesWatchProviders200ResponseResultsSv>>,
    #[serde(rename = "TH", skip_serializing_if = "Option::is_none")]
    pub th: Option<Box<models::TvSeriesWatchProviders200ResponseResultsTh>>,
    #[serde(rename = "TR", skip_serializing_if = "Option::is_none")]
    pub tr: Option<Box<models::TvSeriesWatchProviders200ResponseResultsTr>>,
    #[serde(rename = "TT", skip_serializing_if = "Option::is_none")]
    pub tt: Option<Box<models::TvSeriesWatchProviders200ResponseResultsTt>>,
    #[serde(rename = "TW", skip_serializing_if = "Option::is_none")]
    pub tw: Option<Box<models::TvSeriesWatchProviders200ResponseResultsTw>>,
    #[serde(rename = "TZ", skip_serializing_if = "Option::is_none")]
    pub tz: Option<Box<models::TvSeriesWatchProviders200ResponseResultsTz>>,
    #[serde(rename = "UG", skip_serializing_if = "Option::is_none")]
    pub ug: Option<Box<models::TvSeriesWatchProviders200ResponseResultsUg>>,
    #[serde(rename = "US", skip_serializing_if = "Option::is_none")]
    pub us: Option<Box<models::TvSeriesWatchProviders200ResponseResultsUs>>,
    #[serde(rename = "UY", skip_serializing_if = "Option::is_none")]
    pub uy: Option<Box<models::TvSeriesWatchProviders200ResponseResultsUy>>,
    #[serde(rename = "VE", skip_serializing_if = "Option::is_none")]
    pub ve: Option<Box<models::TvSeriesWatchProviders200ResponseResultsVe>>,
    #[serde(rename = "ZA", skip_serializing_if = "Option::is_none")]
    pub za: Option<Box<models::TvSeriesWatchProviders200ResponseResultsZa>>,
    #[serde(rename = "ZM", skip_serializing_if = "Option::is_none")]
    pub zm: Option<Box<models::TvSeriesWatchProviders200ResponseResultsZm>>,
}

impl TvSeriesWatchProviders200ResponseResults {
    pub fn new() -> TvSeriesWatchProviders200ResponseResults {
        TvSeriesWatchProviders200ResponseResults {
            ae: None,
            ar: None,
            at: None,
            au: None,
            ba: None,
            bb: None,
            be: None,
            bg: None,
            bo: None,
            br: None,
            bs: None,
            ca: None,
            ch: None,
            ci: None,
            cl: None,
            co: None,
            cr: None,
            cz: None,
            de: None,
            dk: None,
            r#do: None,
            dz: None,
            ec: None,
            eg: None,
            es: None,
            fi: None,
            fr: None,
            gb: None,
            gf: None,
            gh: None,
            gq: None,
            gt: None,
            hk: None,
            hn: None,
            hr: None,
            hu: None,
            id: None,
            ie: None,
            il: None,
            iq: None,
            it: None,
            jm: None,
            jp: None,
            ke: None,
            kr: None,
            lb: None,
            lt: None,
            ly: None,
            md: None,
            mk: None,
            mu: None,
            mx: None,
            my: None,
            mz: None,
            ne: None,
            ng: None,
            nl: None,
            no: None,
            nz: None,
            pa: None,
            pe: None,
            ph: None,
            pl: None,
            ps: None,
            pt: None,
            py: None,
            ro: None,
            rs: None,
            ru: None,
            sa: None,
            sc: None,
            se: None,
            sg: None,
            si: None,
            sk: None,
            sn: None,
            sv: None,
            th: None,
            tr: None,
            tt: None,
            tw: None,
            tz: None,
            ug: None,
            us: None,
            uy: None,
            ve: None,
            za: None,
            zm: None,
        }
    }
}

