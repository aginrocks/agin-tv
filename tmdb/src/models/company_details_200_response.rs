/*
 * TMDB API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CompanyDetails200Response {
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "headquarters", skip_serializing_if = "Option::is_none")]
    pub headquarters: Option<String>,
    #[serde(rename = "homepage", skip_serializing_if = "Option::is_none")]
    pub homepage: Option<String>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "logo_path", skip_serializing_if = "Option::is_none")]
    pub logo_path: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "origin_country", skip_serializing_if = "Option::is_none")]
    pub origin_country: Option<String>,
    #[serde(rename = "parent_company", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub parent_company: Option<Option<serde_json::Value>>,
}

impl CompanyDetails200Response {
    pub fn new() -> CompanyDetails200Response {
        CompanyDetails200Response {
            description: None,
            headquarters: None,
            homepage: None,
            id: None,
            logo_path: None,
            name: None,
            origin_country: None,
            parent_company: None,
        }
    }
}

